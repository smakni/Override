gdb) r
Starting program: /home/users/level06/level06
***********************************
*		level06		  *
***********************************
-> Enter Login: smakni
***********************************
***** NEW ACCOUNT DETECTED ********
***********************************
-> Enter Serial: aaaaaaaaaaaaa

^C
Program received signal SIGINT, Interrupt.
0x08048748 in auth ()

=> Raté

(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/users/level06/level06
***********************************
*		level06		  *
***********************************
-> Enter Login: smakni
***********************************
***** NEW ACCOUNT DETECTED ********
***********************************
-> Enter Serial: aaaaaa

Breakpoint 1, 0x08048748 in auth ()
(gdb) disas auth
Dump of assembler code for function auth:
=> 0x08048748 <+0>:	push   ebp
   0x08048749 <+1>:	mov    ebp,esp
   0x0804874b <+3>:	sub    esp,0x28
   0x0804874e <+6>:	mov    DWORD PTR [esp+0x4],0x8048a63
   0x08048756 <+14>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048759 <+17>:	mov    DWORD PTR [esp],eax
   0x0804875c <+20>:	call   0x8048520 <strcspn@plt>
   0x08048761 <+25>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048764 <+28>:	mov    BYTE PTR [eax],0x0
   0x08048767 <+31>:	mov    DWORD PTR [esp+0x4],0x20
   0x0804876f <+39>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048772 <+42>:	mov    DWORD PTR [esp],eax
   0x08048775 <+45>:	call   0x80485d0 <strnlen@plt>
   0x0804877a <+50>:	mov    DWORD PTR [ebp-0xc],eax
   0x0804877d <+53>:	push   eax
   0x0804877e <+54>:	xor    eax,eax
   0x08048780 <+56>:	je     0x8048785 <auth+61>
   0x08048782 <+58>:	add    esp,0x4
   0x08048785 <+61>:	pop    eax
   0x08048786 <+62>:	cmp    DWORD PTR [ebp-0xc],0x5
   0x0804878a <+66>:	jg     0x8048796 <auth+78>
   0x0804878c <+68>:	mov    eax,0x1
   0x08048791 <+73>:	jmp    0x8048877 <auth+303>
   0x08048796 <+78>:	mov    DWORD PTR [esp+0xc],0x0
   0x0804879e <+86>:	mov    DWORD PTR [esp+0x8],0x1
   0x080487a6 <+94>:	mov    DWORD PTR [esp+0x4],0x0
   0x080487ae <+102>:	mov    DWORD PTR [esp],0x0
   0x080487b5 <+109>:	call   0x80485f0 <ptrace@plt>
   0x080487ba <+114>:	cmp    eax,0xffffffff
   0x080487bd <+117>:	jne    0x80487ed <auth+165>
   0x080487bf <+119>:	mov    DWORD PTR [esp],0x8048a68
   0x080487c6 <+126>:	call   0x8048590 <puts@plt>
   0x080487cb <+131>:	mov    DWORD PTR [esp],0x8048a8c
   0x080487d2 <+138>:	call   0x8048590 <puts@plt>
   0x080487d7 <+143>:	mov    DWORD PTR [esp],0x8048ab0
   0x080487de <+150>:	call   0x8048590 <puts@plt>
   0x080487e3 <+155>:	mov    eax,0x1
   0x080487e8 <+160>:	jmp    0x8048877 <auth+303>
   0x080487ed <+165>:	mov    eax,DWORD PTR [ebp+0x8]
   0x080487f0 <+168>:	add    eax,0x3
   0x080487f3 <+171>:	movzx  eax,BYTE PTR [eax]
   0x080487f6 <+174>:	movsx  eax,al
   0x080487f9 <+177>:	xor    eax,0x1337
   0x080487fe <+182>:	add    eax,0x5eeded
   0x08048803 <+187>:	mov    DWORD PTR [ebp-0x10],eax
   0x08048806 <+190>:	mov    DWORD PTR [ebp-0x14],0x0
   0x0804880d <+197>:	jmp    0x804885b <auth+275>
   0x0804880f <+199>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048812 <+202>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048815 <+205>:	movzx  eax,BYTE PTR [eax]
   0x08048818 <+208>:	cmp    al,0x1f
   0x0804881a <+210>:	jg     0x8048823 <auth+219>
   0x0804881c <+212>:	mov    eax,0x1
   0x08048821 <+217>:	jmp    0x8048877 <auth+303>
   0x08048823 <+219>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048826 <+222>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048829 <+225>:	movzx  eax,BYTE PTR [eax]
   0x0804882c <+228>:	movsx  eax,al
   0x0804882f <+231>:	mov    ecx,eax
   0x08048831 <+233>:	xor    ecx,DWORD PTR [ebp-0x10]
   0x08048834 <+236>:	mov    edx,0x88233b2b
   0x08048839 <+241>:	mov    eax,ecx
   0x0804883b <+243>:	mul    edx
---Type <return> to continue, or q <return> to quit---
   0x0804883d <+245>:	mov    eax,ecx
   0x0804883f <+247>:	sub    eax,edx
   0x08048841 <+249>:	shr    eax,1
   0x08048843 <+251>:	add    eax,edx
   0x08048845 <+253>:	shr    eax,0xa
   0x08048848 <+256>:	imul   eax,eax,0x539
   0x0804884e <+262>:	mov    edx,ecx
   0x08048850 <+264>:	sub    edx,eax
   0x08048852 <+266>:	mov    eax,edx
   0x08048854 <+268>:	add    DWORD PTR [ebp-0x10],eax
   0x08048857 <+271>:	add    DWORD PTR [ebp-0x14],0x1
   0x0804885b <+275>:	mov    eax,DWORD PTR [ebp-0x14]
   0x0804885e <+278>:	cmp    eax,DWORD PTR [ebp-0xc]
   0x08048861 <+281>:	jl     0x804880f <auth+199>
   0x08048863 <+283>:	mov    eax,DWORD PTR [ebp+0xc]
   0x08048866 <+286>:	cmp    eax,DWORD PTR [ebp-0x10]
   0x08048869 <+289>:	je     0x8048872 <auth+298>
   0x0804886b <+291>:	mov    eax,0x1
   0x08048870 <+296>:	jmp    0x8048877 <auth+303>
   0x08048872 <+298>:	mov    eax,0x0
   0x08048877 <+303>:	leave
   0x08048878 <+304>:	ret
End of assembler dump.
(gdb) c
Continuing.
.---------------------------.
| !! TAMPERING DETECTED !!  |
'---------------------------'
[Inferior 1 (process 15018) exited with code 01]

=> Raté

(gdb) disas auth
Dump of assembler code for function auth:
   0x08048748 <+0>:	push   ebp
   0x08048749 <+1>:	mov    ebp,esp
   0x0804874b <+3>:	sub    esp,0x28
   0x0804874e <+6>:	mov    DWORD PTR [esp+0x4],0x8048a63
   0x08048756 <+14>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048759 <+17>:	mov    DWORD PTR [esp],eax
   0x0804875c <+20>:	call   0x8048520 <strcspn@plt>
   0x08048761 <+25>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048764 <+28>:	mov    BYTE PTR [eax],0x0
   0x08048767 <+31>:	mov    DWORD PTR [esp+0x4],0x20
   0x0804876f <+39>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048772 <+42>:	mov    DWORD PTR [esp],eax
   0x08048775 <+45>:	call   0x80485d0 <strnlen@plt>
   0x0804877a <+50>:	mov    DWORD PTR [ebp-0xc],eax
   0x0804877d <+53>:	push   eax
   0x0804877e <+54>:	xor    eax,eax
   0x08048780 <+56>:	je     0x8048785 <auth+61>
   0x08048782 <+58>:	add    esp,0x4
   0x08048785 <+61>:	pop    eax
   0x08048786 <+62>:	cmp    DWORD PTR [ebp-0xc],0x5
   0x0804878a <+66>:	jg     0x8048796 <auth+78>
   0x0804878c <+68>:	mov    eax,0x1
   0x08048791 <+73>:	jmp    0x8048877 <auth+303>
   0x08048796 <+78>:	mov    DWORD PTR [esp+0xc],0x0
   0x0804879e <+86>:	mov    DWORD PTR [esp+0x8],0x1
   0x080487a6 <+94>:	mov    DWORD PTR [esp+0x4],0x0
   0x080487ae <+102>:	mov    DWORD PTR [esp],0x0
   0x080487b5 <+109>:	call   0x80485f0 <ptrace@plt>
   0x080487ba <+114>:	cmp    eax,0xffffffff
   0x080487bd <+117>:	jne    0x80487ed <auth+165>
   0x080487bf <+119>:	mov    DWORD PTR [esp],0x8048a68
   0x080487c6 <+126>:	call   0x8048590 <puts@plt>
   0x080487cb <+131>:	mov    DWORD PTR [esp],0x8048a8c
   0x080487d2 <+138>:	call   0x8048590 <puts@plt>
   0x080487d7 <+143>:	mov    DWORD PTR [esp],0x8048ab0
   0x080487de <+150>:	call   0x8048590 <puts@plt>
   0x080487e3 <+155>:	mov    eax,0x1
   0x080487e8 <+160>:	jmp    0x8048877 <auth+303>
   0x080487ed <+165>:	mov    eax,DWORD PTR [ebp+0x8]
   0x080487f0 <+168>:	add    eax,0x3
   0x080487f3 <+171>:	movzx  eax,BYTE PTR [eax]
   0x080487f6 <+174>:	movsx  eax,al
   0x080487f9 <+177>:	xor    eax,0x1337
   0x080487fe <+182>:	add    eax,0x5eeded
   0x08048803 <+187>:	mov    DWORD PTR [ebp-0x10],eax
   0x08048806 <+190>:	mov    DWORD PTR [ebp-0x14],0x0
   0x0804880d <+197>:	jmp    0x804885b <auth+275>
   0x0804880f <+199>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048812 <+202>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048815 <+205>:	movzx  eax,BYTE PTR [eax]
   0x08048818 <+208>:	cmp    al,0x1f
   0x0804881a <+210>:	jg     0x8048823 <auth+219>
   0x0804881c <+212>:	mov    eax,0x1
   0x08048821 <+217>:	jmp    0x8048877 <auth+303>
   0x08048823 <+219>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048826 <+222>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048829 <+225>:	movzx  eax,BYTE PTR [eax]
   0x0804882c <+228>:	movsx  eax,al
   0x0804882f <+231>:	mov    ecx,eax
   0x08048831 <+233>:	xor    ecx,DWORD PTR [ebp-0x10]
   0x08048834 <+236>:	mov    edx,0x88233b2b
   0x08048839 <+241>:	mov    eax,ecx
   0x0804883b <+243>:	mul    edx
---Type <return> to continue, or q <return> to quit---
   0x0804883d <+245>:	mov    eax,ecx
   0x0804883f <+247>:	sub    eax,edx
   0x08048841 <+249>:	shr    eax,1
   0x08048843 <+251>:	add    eax,edx
   0x08048845 <+253>:	shr    eax,0xa
   0x08048848 <+256>:	imul   eax,eax,0x539
   0x0804884e <+262>:	mov    edx,ecx
   0x08048850 <+264>:	sub    edx,eax
   0x08048852 <+266>:	mov    eax,edx
   0x08048854 <+268>:	add    DWORD PTR [ebp-0x10],eax
   0x08048857 <+271>:	add    DWORD PTR [ebp-0x14],0x1
   0x0804885b <+275>:	mov    eax,DWORD PTR [ebp-0x14]
   0x0804885e <+278>:	cmp    eax,DWORD PTR [ebp-0xc]
   0x08048861 <+281>:	jl     0x804880f <auth+199>
   0x08048863 <+283>:	mov    eax,DWORD PTR [ebp+0xc]
   0x08048866 <+286>:	cmp    eax,DWORD PTR [ebp-0x10]
   0x08048869 <+289>:	je     0x8048872 <auth+298>
   0x0804886b <+291>:	mov    eax,0x1
   0x08048870 <+296>:	jmp    0x8048877 <auth+303>
   0x08048872 <+298>:	mov    eax,0x0
   0x08048877 <+303>:	leave
   0x08048878 <+304>:	ret
End of assembler dump.
(gdb) b*0x080487ba
Breakpoint 3 at 0x80487ba
(gdb) r
Starting program: /home/users/level06/level06
***********************************
*		level06		  *
***********************************
-> Enter Login: smakni
***********************************
***** NEW ACCOUNT DETECTED ********
***********************************
-> Enter Serial: aaaaa

Breakpoint 1, 0x08048748 in auth ()
(gdb) c
Continuing.

Breakpoint 3, 0x080487ba in auth ()
(gdb) disas auth
Dump of assembler code for function auth:
   0x08048748 <+0>:	push   ebp
   0x08048749 <+1>:	mov    ebp,esp
   0x0804874b <+3>:	sub    esp,0x28
   0x0804874e <+6>:	mov    DWORD PTR [esp+0x4],0x8048a63
   0x08048756 <+14>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048759 <+17>:	mov    DWORD PTR [esp],eax
   0x0804875c <+20>:	call   0x8048520 <strcspn@plt>
   0x08048761 <+25>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048764 <+28>:	mov    BYTE PTR [eax],0x0
   0x08048767 <+31>:	mov    DWORD PTR [esp+0x4],0x20
   0x0804876f <+39>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048772 <+42>:	mov    DWORD PTR [esp],eax
   0x08048775 <+45>:	call   0x80485d0 <strnlen@plt>
   0x0804877a <+50>:	mov    DWORD PTR [ebp-0xc],eax
   0x0804877d <+53>:	push   eax
   0x0804877e <+54>:	xor    eax,eax
   0x08048780 <+56>:	je     0x8048785 <auth+61>
   0x08048782 <+58>:	add    esp,0x4
   0x08048785 <+61>:	pop    eax
   0x08048786 <+62>:	cmp    DWORD PTR [ebp-0xc],0x5
   0x0804878a <+66>:	jg     0x8048796 <auth+78>
   0x0804878c <+68>:	mov    eax,0x1
   0x08048791 <+73>:	jmp    0x8048877 <auth+303>
   0x08048796 <+78>:	mov    DWORD PTR [esp+0xc],0x0
   0x0804879e <+86>:	mov    DWORD PTR [esp+0x8],0x1
   0x080487a6 <+94>:	mov    DWORD PTR [esp+0x4],0x0
   0x080487ae <+102>:	mov    DWORD PTR [esp],0x0
   0x080487b5 <+109>:	call   0x80485f0 <ptrace@plt>
=> 0x080487ba <+114>:	cmp    eax,0xffffffff
   0x080487bd <+117>:	jne    0x80487ed <auth+165>
   0x080487bf <+119>:	mov    DWORD PTR [esp],0x8048a68
   0x080487c6 <+126>:	call   0x8048590 <puts@plt>
   0x080487cb <+131>:	mov    DWORD PTR [esp],0x8048a8c
   0x080487d2 <+138>:	call   0x8048590 <puts@plt>
   0x080487d7 <+143>:	mov    DWORD PTR [esp],0x8048ab0
   0x080487de <+150>:	call   0x8048590 <puts@plt>
   0x080487e3 <+155>:	mov    eax,0x1
   0x080487e8 <+160>:	jmp    0x8048877 <auth+303>
   0x080487ed <+165>:	mov    eax,DWORD PTR [ebp+0x8]
   0x080487f0 <+168>:	add    eax,0x3
   0x080487f3 <+171>:	movzx  eax,BYTE PTR [eax]
   0x080487f6 <+174>:	movsx  eax,al
   0x080487f9 <+177>:	xor    eax,0x1337
   0x080487fe <+182>:	add    eax,0x5eeded
   0x08048803 <+187>:	mov    DWORD PTR [ebp-0x10],eax
   0x08048806 <+190>:	mov    DWORD PTR [ebp-0x14],0x0
   0x0804880d <+197>:	jmp    0x804885b <auth+275>
   0x0804880f <+199>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048812 <+202>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048815 <+205>:	movzx  eax,BYTE PTR [eax]
   0x08048818 <+208>:	cmp    al,0x1f
   0x0804881a <+210>:	jg     0x8048823 <auth+219>
   0x0804881c <+212>:	mov    eax,0x1
   0x08048821 <+217>:	jmp    0x8048877 <auth+303>
   0x08048823 <+219>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048826 <+222>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048829 <+225>:	movzx  eax,BYTE PTR [eax]
   0x0804882c <+228>:	movsx  eax,al
   0x0804882f <+231>:	mov    ecx,eax
   0x08048831 <+233>:	xor    ecx,DWORD PTR [ebp-0x10]
   0x08048834 <+236>:	mov    edx,0x88233b2b
   0x08048839 <+241>:	mov    eax,ecx
   0x0804883b <+243>:	mul    edx
---Type <return> to continue, or q <return> to quit---
   0x0804883d <+245>:	mov    eax,ecx
   0x0804883f <+247>:	sub    eax,edx
   0x08048841 <+249>:	shr    eax,1
   0x08048843 <+251>:	add    eax,edx
   0x08048845 <+253>:	shr    eax,0xa
   0x08048848 <+256>:	imul   eax,eax,0x539
   0x0804884e <+262>:	mov    edx,ecx
   0x08048850 <+264>:	sub    edx,eax
   0x08048852 <+266>:	mov    eax,edx
   0x08048854 <+268>:	add    DWORD PTR [ebp-0x10],eax
   0x08048857 <+271>:	add    DWORD PTR [ebp-0x14],0x1
   0x0804885b <+275>:	mov    eax,DWORD PTR [ebp-0x14]
   0x0804885e <+278>:	cmp    eax,DWORD PTR [ebp-0xc]
   0x08048861 <+281>:	jl     0x804880f <auth+199>
   0x08048863 <+283>:	mov    eax,DWORD PTR [ebp+0xc]
   0x08048866 <+286>:	cmp    eax,DWORD PTR [ebp-0x10]
   0x08048869 <+289>:	je     0x8048872 <auth+298>
   0x0804886b <+291>:	mov    eax,0x1
   0x08048870 <+296>:	jmp    0x8048877 <auth+303>
   0x08048872 <+298>:	mov    eax,0x0
   0x08048877 <+303>:	leave
   0x08048878 <+304>:	ret
End of assembler dump.
(gdb) i r eax
eax            0xffffffff	-1
(gdb) set eax=0
No symbol table is loaded.  Use the "file" command.
(gdb) set $eax=0
(gdb) c
Continuing.

Breakpoint 2, 0x08048866 in auth ()
(gdb) disas auth
Dump of assembler code for function auth:
   0x08048748 <+0>:	push   ebp
   0x08048749 <+1>:	mov    ebp,esp
   0x0804874b <+3>:	sub    esp,0x28
   0x0804874e <+6>:	mov    DWORD PTR [esp+0x4],0x8048a63
   0x08048756 <+14>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048759 <+17>:	mov    DWORD PTR [esp],eax
   0x0804875c <+20>:	call   0x8048520 <strcspn@plt>
   0x08048761 <+25>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048764 <+28>:	mov    BYTE PTR [eax],0x0
   0x08048767 <+31>:	mov    DWORD PTR [esp+0x4],0x20
   0x0804876f <+39>:	mov    eax,DWORD PTR [ebp+0x8]
   0x08048772 <+42>:	mov    DWORD PTR [esp],eax
   0x08048775 <+45>:	call   0x80485d0 <strnlen@plt>
   0x0804877a <+50>:	mov    DWORD PTR [ebp-0xc],eax
   0x0804877d <+53>:	push   eax
   0x0804877e <+54>:	xor    eax,eax
   0x08048780 <+56>:	je     0x8048785 <auth+61>
   0x08048782 <+58>:	add    esp,0x4
   0x08048785 <+61>:	pop    eax
   0x08048786 <+62>:	cmp    DWORD PTR [ebp-0xc],0x5
   0x0804878a <+66>:	jg     0x8048796 <auth+78>
   0x0804878c <+68>:	mov    eax,0x1
   0x08048791 <+73>:	jmp    0x8048877 <auth+303>
   0x08048796 <+78>:	mov    DWORD PTR [esp+0xc],0x0
   0x0804879e <+86>:	mov    DWORD PTR [esp+0x8],0x1
   0x080487a6 <+94>:	mov    DWORD PTR [esp+0x4],0x0
   0x080487ae <+102>:	mov    DWORD PTR [esp],0x0
   0x080487b5 <+109>:	call   0x80485f0 <ptrace@plt>
   0x080487ba <+114>:	cmp    eax,0xffffffff
   0x080487bd <+117>:	jne    0x80487ed <auth+165>
   0x080487bf <+119>:	mov    DWORD PTR [esp],0x8048a68
   0x080487c6 <+126>:	call   0x8048590 <puts@plt>
   0x080487cb <+131>:	mov    DWORD PTR [esp],0x8048a8c
   0x080487d2 <+138>:	call   0x8048590 <puts@plt>
   0x080487d7 <+143>:	mov    DWORD PTR [esp],0x8048ab0
   0x080487de <+150>:	call   0x8048590 <puts@plt>
   0x080487e3 <+155>:	mov    eax,0x1
   0x080487e8 <+160>:	jmp    0x8048877 <auth+303>
   0x080487ed <+165>:	mov    eax,DWORD PTR [ebp+0x8]
   0x080487f0 <+168>:	add    eax,0x3
   0x080487f3 <+171>:	movzx  eax,BYTE PTR [eax]
   0x080487f6 <+174>:	movsx  eax,al
   0x080487f9 <+177>:	xor    eax,0x1337
   0x080487fe <+182>:	add    eax,0x5eeded
   0x08048803 <+187>:	mov    DWORD PTR [ebp-0x10],eax
   0x08048806 <+190>:	mov    DWORD PTR [ebp-0x14],0x0
   0x0804880d <+197>:	jmp    0x804885b <auth+275>
   0x0804880f <+199>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048812 <+202>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048815 <+205>:	movzx  eax,BYTE PTR [eax]
   0x08048818 <+208>:	cmp    al,0x1f
   0x0804881a <+210>:	jg     0x8048823 <auth+219>
   0x0804881c <+212>:	mov    eax,0x1
   0x08048821 <+217>:	jmp    0x8048877 <auth+303>
   0x08048823 <+219>:	mov    eax,DWORD PTR [ebp-0x14]
   0x08048826 <+222>:	add    eax,DWORD PTR [ebp+0x8]
   0x08048829 <+225>:	movzx  eax,BYTE PTR [eax]
   0x0804882c <+228>:	movsx  eax,al
   0x0804882f <+231>:	mov    ecx,eax
   0x08048831 <+233>:	xor    ecx,DWORD PTR [ebp-0x10]
   0x08048834 <+236>:	mov    edx,0x88233b2b
   0x08048839 <+241>:	mov    eax,ecx
   0x0804883b <+243>:	mul    edx
---Type <return> to continue, or q <return> to quit---
   0x0804883d <+245>:	mov    eax,ecx
   0x0804883f <+247>:	sub    eax,edx
   0x08048841 <+249>:	shr    eax,1
   0x08048843 <+251>:	add    eax,edx
   0x08048845 <+253>:	shr    eax,0xa
   0x08048848 <+256>:	imul   eax,eax,0x539
   0x0804884e <+262>:	mov    edx,ecx
   0x08048850 <+264>:	sub    edx,eax
   0x08048852 <+266>:	mov    eax,edx
   0x08048854 <+268>:	add    DWORD PTR [ebp-0x10],eax
   0x08048857 <+271>:	add    DWORD PTR [ebp-0x14],0x1
   0x0804885b <+275>:	mov    eax,DWORD PTR [ebp-0x14]
   0x0804885e <+278>:	cmp    eax,DWORD PTR [ebp-0xc]
   0x08048861 <+281>:	jl     0x804880f <auth+199>
   0x08048863 <+283>:	mov    eax,DWORD PTR [ebp+0xc]
=> 0x08048866 <+286>:	cmp    eax,DWORD PTR [ebp-0x10]
   0x08048869 <+289>:	je     0x8048872 <auth+298>
   0x0804886b <+291>:	mov    eax,0x1
   0x08048870 <+296>:	jmp    0x8048877 <auth+303>
   0x08048872 <+298>:	mov    eax,0x0
   0x08048877 <+303>:	leave
   0x08048878 <+304>:	ret
End of assembler dump.
(gdb) i r eax
eax            0x1	1
(gdb) x/s ebp-0xc
No symbol table is loaded.  Use the "file" command.
(gdb) x/s $ebp-0xc
0xffffd5dc:	 "\006"
(gdb) x/s $ebp-0x10
0xffffd5d8:	 "\375\032_"
(gdb) x/ws $ebp-0x10
0xffffd5d8:	 U"\x5f1afd\006"
(gdb) x/wd $ebp-0x10
0xffffd5d8:	6232829          =>   BINGO on a notre code pour 'smakni'

level06@OverRide:~$ ./level06
***********************************
*		level06		  *
***********************************
-> Enter Login: smakni
***********************************
***** NEW ACCOUNT DETECTED ********
***********************************
-> Enter Serial: 6232829
Authenticated!
$ whoami
level07
$ cat /home/users/level07/.pass
GbcPDRgsFK77LNnnuh7QyFYA2942Gp8yKj9KrWD8
